#cloud-config

##############################################################################
#
# Set the default cloud-init user to `spel` and update packages
#
##############################################################################
system_info:
  default_user:
    name: spel
    gecos: spel admin account
    lock_passwd: true
    sudo: ["ALL=(root) NOPASSWD:ALL"]

package_upgrade: false

##############################################################################
#
# Pivot the root partition to a tmpfs mount point so that the root volume can
# be re-partitioned.
#
##############################################################################
runcmd:
  - set -x
  - set -e
    # Prevent selinux from interfering
  - setenforce 0 || true

  - echo "export http_proxy=<PROXYSERVER>" > /etc/profile.d/proxy.sh && chmod 755 /etc/profile.d/proxy.sh
  - echo "export https_proxy=<PROXYSERVER>" >> /etc/profile.d/proxy.sh
  - echo "export no_proxy=localhost,127.0.0.1,169.254.169.254,.sock" >> /etc/profile.d/proxy.sh
  - echo "proxy=<PROXYSERVER>" >> /etc/yum.conf

  - yum -y update
  
  # Get fuser
  - yum -y install psmisc

  # Create tmpfs mount
  - mkdir /tmp/tmproot
  - mount none /tmp/tmproot -t tmpfs

  # Copy everything to the tmpfs mount
  - cp -ax / /tmp/tmproot
  - cp -a /dev /tmp/tmproot

  # Switch / to tmpfs
  - mkdir /tmp/tmproot/oldroot
  - mount --make-rprivate /
  - pivot_root /tmp/tmproot /tmp/tmproot/oldroot
  - mount --move /oldroot/dev /dev
  - mount --move /oldroot/proc /proc
  - mount --move /oldroot/sys /sys
  - mount --move /oldroot/run /run
  - mount --move /oldroot/tmp /tmp || true # not every ami starts with this

  # Unmount everything we can on /oldroot
  - |
    for MOUNT in $(
        cat /proc/mounts | \
        cut -d ' ' -f 2 | \
        grep '/oldroot/' | \
        sort -ru
        )
    do
        umount $MOUNT || true
    done

  # Attempt final unmount of /oldroot; this will probably fail since the process
  # running this script is still open. A follow-on script or interactive shell
  # can check and issue the final umount (works well with packer).
  - umount /oldroot || true

  # Change ssh port. Set packer to connect to port 122; this way packer waits
  # until this script is complete.
  - sed -i -e "s/^[#]*Port .*$/Port 122/" /etc/ssh/sshd_config
  - test $(systemctl | grep -c firewalld) -eq 0 || systemctl stop firewalld
  - systemctl restart sshd
  # Further stuff to do via packer before `umount /oldroot`
  # Restart systemd
  #- systemctl daemon-reexec
  # Stop services holding /oldroot
  #   Note: Do not do this in an interactive shell because you will probably
  #   kill your session. Instead, just use `fuser -vm /oldroot` to identify
  #   processes holding /oldroot and kill them by name with `killall <name>`.
  #   Then restart ssh, reconnect to a new session, and close your old session.
  ####
  #- fuser -vmk /oldroot
